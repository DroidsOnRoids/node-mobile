import org.ajoberstar.grgit.Grgit

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'de.mannodermaus.android-junit5'


final def git = Grgit.open(currentDir: projectDir)
final def shortenedCommitHash = git.head().getAbbreviatedId()
final def commitsOnBranchCount = git.log(includes: ['HEAD']).size()

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "network.path.mobilenode"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode commitsOnBranchCount
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        junitPlatform {
            unitTests {
                applyDefaultTestOptions true
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(keystorePath)
            storePassword keystorePassword
            keyAlias keyAliasName
            keyPassword keyAliasPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'WEBSOCKET_SERVER_URL', '"ws://jobs-api.path.network/ws"'
        }
        debug {
            versionNameSuffix "$shortenedCommitHash.${commitsOnBranchCount}.debug"
            buildConfigField 'String', 'WEBSOCKET_SERVER_URL', '"ws://jobs-api.dev.udpflood.net/ws"'
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {

    //Communication
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.github.tinder.scarlet:scarlet:$versions.scarlet"
    implementation "com.github.tinder.scarlet:scarlet-websocket-okhttp:$versions.scarlet"
    implementation "com.github.tinder.scarlet:scarlet-message-adapter-gson:$versions.scarlet"
    implementation "com.github.tinder.scarlet:scarlet-stream-adapter-coroutines:$versions.scarlet"

    //Jetpack
    implementation "androidx.appcompat:appcompat:$versions.androidX"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    //Ktx
    implementation "androidx.core:core-ktx:$versions.androidKtx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$versions.junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
    testImplementation "junit:junit:$versions.oldJunit"
    testImplementation "org.assertj:assertj-core:$versions.assertJ"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "androidx.arch.core:core-testing:$versions.lifecycle"

    //Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    //DI
    implementation "org.koin:koin-core:$versions.koin"
    implementation "org.koin:koin-android:$versions.koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"
    implementation "org.koin:koin-androidx-scope:$versions.koin"

    //GSON
    implementation "com.google.code.gson:gson:$versions.gson"

    //Location
    implementation "com.google.android.gms:play-services-location:$versions.location"

    //Logging
    implementation "com.jakewharton.timber:timber:$versions.timber"

    //Crash reporting
    implementation("com.crashlytics.sdk.android:crashlytics:$versions.crashlytics") {
        transitive = true
    }
}